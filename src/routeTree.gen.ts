/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as RecipeIdIndexImport } from './routes/$recipeId/index'
import { Route as FollowingsFollowingsIdRecipesImport } from './routes/followings/$followingsId.recipes'
import { Route as FollowersFollowersIdRecipesImport } from './routes/followers/$followersId.recipes'

// Create Virtual Routes

const SignupRouteLazyImport = createFileRoute('/signup')()
const SigninRouteLazyImport = createFileRoute('/signin')()
const ProfileRouteLazyImport = createFileRoute('/profile')()
const FavoritesRouteLazyImport = createFileRoute('/favorites')()
const CreateRouteLazyImport = createFileRoute('/create')()
const FollowingsIndexLazyImport = createFileRoute('/followings/')()
const FollowersIndexLazyImport = createFileRoute('/followers/')()
const RecipeIdEditLazyImport = createFileRoute('/$recipeId/edit')()

// Create/Update Routes

const SignupRouteLazyRoute = SignupRouteLazyImport.update({
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/signup/route.lazy').then((d) => d.Route))

const SigninRouteLazyRoute = SigninRouteLazyImport.update({
  path: '/signin',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/signin/route.lazy').then((d) => d.Route))

const ProfileRouteLazyRoute = ProfileRouteLazyImport.update({
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/profile/route.lazy').then((d) => d.Route))

const FavoritesRouteLazyRoute = FavoritesRouteLazyImport.update({
  path: '/favorites',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/favorites/route.lazy').then((d) => d.Route),
)

const CreateRouteLazyRoute = CreateRouteLazyImport.update({
  path: '/create',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/create/route.lazy').then((d) => d.Route))

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const FollowingsIndexLazyRoute = FollowingsIndexLazyImport.update({
  path: '/followings/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/followings/index.lazy').then((d) => d.Route),
)

const FollowersIndexLazyRoute = FollowersIndexLazyImport.update({
  path: '/followers/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/followers/index.lazy').then((d) => d.Route),
)

const RecipeIdIndexRoute = RecipeIdIndexImport.update({
  path: '/$recipeId/',
  getParentRoute: () => rootRoute,
} as any)

const RecipeIdEditLazyRoute = RecipeIdEditLazyImport.update({
  path: '/$recipeId/edit',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/$recipeId/edit.lazy').then((d) => d.Route),
)

const FollowingsFollowingsIdRecipesRoute =
  FollowingsFollowingsIdRecipesImport.update({
    path: '/followings/$followingsId/recipes',
    getParentRoute: () => rootRoute,
  } as any)

const FollowersFollowersIdRecipesRoute =
  FollowersFollowersIdRecipesImport.update({
    path: '/followers/$followersId/recipes',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/create': {
      preLoaderRoute: typeof CreateRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/favorites': {
      preLoaderRoute: typeof FavoritesRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      preLoaderRoute: typeof ProfileRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/signin': {
      preLoaderRoute: typeof SigninRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      preLoaderRoute: typeof SignupRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/$recipeId/edit': {
      preLoaderRoute: typeof RecipeIdEditLazyImport
      parentRoute: typeof rootRoute
    }
    '/$recipeId/': {
      preLoaderRoute: typeof RecipeIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/followers/': {
      preLoaderRoute: typeof FollowersIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/followings/': {
      preLoaderRoute: typeof FollowingsIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/followers/$followersId/recipes': {
      preLoaderRoute: typeof FollowersFollowersIdRecipesImport
      parentRoute: typeof rootRoute
    }
    '/followings/$followingsId/recipes': {
      preLoaderRoute: typeof FollowingsFollowingsIdRecipesImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  CreateRouteLazyRoute,
  FavoritesRouteLazyRoute,
  ProfileRouteLazyRoute,
  SigninRouteLazyRoute,
  SignupRouteLazyRoute,
  RecipeIdEditLazyRoute,
  RecipeIdIndexRoute,
  FollowersIndexLazyRoute,
  FollowingsIndexLazyRoute,
  FollowersFollowersIdRecipesRoute,
  FollowingsFollowingsIdRecipesRoute,
])

/* prettier-ignore-end */
